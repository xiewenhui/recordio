// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: document.proto

#ifndef PROTOBUF_document_2eproto__INCLUDED
#define PROTOBUF_document_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_document_2eproto();
void protobuf_AssignDesc_document_2eproto();
void protobuf_ShutdownFile_document_2eproto();

class Links;
class Language;
class Name;
class Document;

// ===================================================================

class Links : public ::google::protobuf::Message {
 public:
  Links();
  virtual ~Links();
  
  Links(const Links& from);
  
  inline Links& operator=(const Links& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Links& default_instance();
  
  void Swap(Links* other);
  
  // implements Message ----------------------------------------------
  
  Links* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Links& from);
  void MergeFrom(const Links& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int64 backward = 1;
  inline int backward_size() const;
  inline void clear_backward();
  static const int kBackwardFieldNumber = 1;
  inline ::google::protobuf::int64 backward(int index) const;
  inline void set_backward(int index, ::google::protobuf::int64 value);
  inline void add_backward(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      backward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_backward();
  
  // repeated int64 forward = 2;
  inline int forward_size() const;
  inline void clear_forward();
  static const int kForwardFieldNumber = 2;
  inline ::google::protobuf::int64 forward(int index) const;
  inline void set_forward(int index, ::google::protobuf::int64 value);
  inline void add_forward(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      forward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_forward();
  
  // @@protoc_insertion_point(class_scope:Links)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > backward_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > forward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_document_2eproto();
  friend void protobuf_AssignDesc_document_2eproto();
  friend void protobuf_ShutdownFile_document_2eproto();
  
  void InitAsDefaultInstance();
  static Links* default_instance_;
};
// -------------------------------------------------------------------

class Language : public ::google::protobuf::Message {
 public:
  Language();
  virtual ~Language();
  
  Language(const Language& from);
  
  inline Language& operator=(const Language& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Language& default_instance();
  
  void Swap(Language* other);
  
  // implements Message ----------------------------------------------
  
  Language* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Language& from);
  void MergeFrom(const Language& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  
  // optional string country = 2;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 2;
  inline const ::std::string& country() const;
  inline void set_country(const ::std::string& value);
  inline void set_country(const char* value);
  inline void set_country(const char* value, size_t size);
  inline ::std::string* mutable_country();
  inline ::std::string* release_country();
  
  // @@protoc_insertion_point(class_scope:Language)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_country();
  inline void clear_has_country();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* code_;
  ::std::string* country_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_document_2eproto();
  friend void protobuf_AssignDesc_document_2eproto();
  friend void protobuf_ShutdownFile_document_2eproto();
  
  void InitAsDefaultInstance();
  static Language* default_instance_;
};
// -------------------------------------------------------------------

class Name : public ::google::protobuf::Message {
 public:
  Name();
  virtual ~Name();
  
  Name(const Name& from);
  
  inline Name& operator=(const Name& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Name& default_instance();
  
  void Swap(Name* other);
  
  // implements Message ----------------------------------------------
  
  Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Name& from);
  void MergeFrom(const Name& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Language language = 1;
  inline int language_size() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 1;
  inline const ::Language& language(int index) const;
  inline ::Language* mutable_language(int index);
  inline ::Language* add_language();
  inline const ::google::protobuf::RepeatedPtrField< ::Language >&
      language() const;
  inline ::google::protobuf::RepeatedPtrField< ::Language >*
      mutable_language();
  
  // optional string url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  
  // @@protoc_insertion_point(class_scope:Name)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Language > language_;
  ::std::string* url_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_document_2eproto();
  friend void protobuf_AssignDesc_document_2eproto();
  friend void protobuf_ShutdownFile_document_2eproto();
  
  void InitAsDefaultInstance();
  static Name* default_instance_;
};
// -------------------------------------------------------------------

class Document : public ::google::protobuf::Message {
 public:
  Document();
  virtual ~Document();
  
  Document(const Document& from);
  
  inline Document& operator=(const Document& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Document& default_instance();
  
  void Swap(Document* other);
  
  // implements Message ----------------------------------------------
  
  Document* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Document& from);
  void MergeFrom(const Document& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 docid = 1;
  inline bool has_docid() const;
  inline void clear_docid();
  static const int kDocidFieldNumber = 1;
  inline ::google::protobuf::int64 docid() const;
  inline void set_docid(::google::protobuf::int64 value);
  
  // optional .Links links = 2;
  inline bool has_links() const;
  inline void clear_links();
  static const int kLinksFieldNumber = 2;
  inline const ::Links& links() const;
  inline ::Links* mutable_links();
  inline ::Links* release_links();
  
  // repeated .Name name = 3;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::Name& name(int index) const;
  inline ::Name* mutable_name(int index);
  inline ::Name* add_name();
  inline const ::google::protobuf::RepeatedPtrField< ::Name >&
      name() const;
  inline ::google::protobuf::RepeatedPtrField< ::Name >*
      mutable_name();
  
  // optional string payload = 4;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 4;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const char* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  
  // @@protoc_insertion_point(class_scope:Document)
 private:
  inline void set_has_docid();
  inline void clear_has_docid();
  inline void set_has_links();
  inline void clear_has_links();
  inline void set_has_payload();
  inline void clear_has_payload();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 docid_;
  ::Links* links_;
  ::google::protobuf::RepeatedPtrField< ::Name > name_;
  ::std::string* payload_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_document_2eproto();
  friend void protobuf_AssignDesc_document_2eproto();
  friend void protobuf_ShutdownFile_document_2eproto();
  
  void InitAsDefaultInstance();
  static Document* default_instance_;
};
// ===================================================================


// ===================================================================

// Links

// repeated int64 backward = 1;
inline int Links::backward_size() const {
  return backward_.size();
}
inline void Links::clear_backward() {
  backward_.Clear();
}
inline ::google::protobuf::int64 Links::backward(int index) const {
  return backward_.Get(index);
}
inline void Links::set_backward(int index, ::google::protobuf::int64 value) {
  backward_.Set(index, value);
}
inline void Links::add_backward(::google::protobuf::int64 value) {
  backward_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Links::backward() const {
  return backward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Links::mutable_backward() {
  return &backward_;
}

// repeated int64 forward = 2;
inline int Links::forward_size() const {
  return forward_.size();
}
inline void Links::clear_forward() {
  forward_.Clear();
}
inline ::google::protobuf::int64 Links::forward(int index) const {
  return forward_.Get(index);
}
inline void Links::set_forward(int index, ::google::protobuf::int64 value) {
  forward_.Set(index, value);
}
inline void Links::add_forward(::google::protobuf::int64 value) {
  forward_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Links::forward() const {
  return forward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Links::mutable_forward() {
  return &forward_;
}

// -------------------------------------------------------------------

// Language

// required string code = 1;
inline bool Language::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Language::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Language::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Language::clear_code() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& Language::code() const {
  return *code_;
}
inline void Language::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Language::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Language::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Language::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  return code_;
}
inline ::std::string* Language::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string country = 2;
inline bool Language::has_country() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Language::set_has_country() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Language::clear_has_country() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Language::clear_country() {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    country_->clear();
  }
  clear_has_country();
}
inline const ::std::string& Language::country() const {
  return *country_;
}
inline void Language::set_country(const ::std::string& value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void Language::set_country(const char* value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void Language::set_country(const char* value, size_t size) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Language::mutable_country() {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  return country_;
}
inline ::std::string* Language::release_country() {
  clear_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_;
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Name

// repeated .Language language = 1;
inline int Name::language_size() const {
  return language_.size();
}
inline void Name::clear_language() {
  language_.Clear();
}
inline const ::Language& Name::language(int index) const {
  return language_.Get(index);
}
inline ::Language* Name::mutable_language(int index) {
  return language_.Mutable(index);
}
inline ::Language* Name::add_language() {
  return language_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Language >&
Name::language() const {
  return language_;
}
inline ::google::protobuf::RepeatedPtrField< ::Language >*
Name::mutable_language() {
  return &language_;
}

// optional string url = 2;
inline bool Name::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Name::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Name::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Name::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& Name::url() const {
  return *url_;
}
inline void Name::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void Name::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void Name::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Name::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* Name::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Document

// required int64 docid = 1;
inline bool Document::has_docid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Document::set_has_docid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Document::clear_has_docid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Document::clear_docid() {
  docid_ = GOOGLE_LONGLONG(0);
  clear_has_docid();
}
inline ::google::protobuf::int64 Document::docid() const {
  return docid_;
}
inline void Document::set_docid(::google::protobuf::int64 value) {
  set_has_docid();
  docid_ = value;
}

// optional .Links links = 2;
inline bool Document::has_links() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Document::set_has_links() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Document::clear_has_links() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Document::clear_links() {
  if (links_ != NULL) links_->::Links::Clear();
  clear_has_links();
}
inline const ::Links& Document::links() const {
  return links_ != NULL ? *links_ : *default_instance_->links_;
}
inline ::Links* Document::mutable_links() {
  set_has_links();
  if (links_ == NULL) links_ = new ::Links;
  return links_;
}
inline ::Links* Document::release_links() {
  clear_has_links();
  ::Links* temp = links_;
  links_ = NULL;
  return temp;
}

// repeated .Name name = 3;
inline int Document::name_size() const {
  return name_.size();
}
inline void Document::clear_name() {
  name_.Clear();
}
inline const ::Name& Document::name(int index) const {
  return name_.Get(index);
}
inline ::Name* Document::mutable_name(int index) {
  return name_.Mutable(index);
}
inline ::Name* Document::add_name() {
  return name_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Name >&
Document::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::Name >*
Document::mutable_name() {
  return &name_;
}

// optional string payload = 4;
inline bool Document::has_payload() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Document::set_has_payload() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Document::clear_has_payload() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Document::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& Document::payload() const {
  return *payload_;
}
inline void Document::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void Document::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void Document::set_payload(const char* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Document::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* Document::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_document_2eproto__INCLUDED
